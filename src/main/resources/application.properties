spring.profiles.active=dev
server.port=80


#出现错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false

#spring.datasource.url=jdbc:mysql://192.168.10.53:3306/ntest?useUnicode=true&characterEncoding=UTF-8&tinyInt1isBit=false
#spring.datasource.username=mysql
#spring.datasource.password=password

spring.datasource.url=jdbc:mysql://localhost:3306/novels?useUnicode=true&characterEncoding=UTF-8&tinyInt1isBit=false&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=mysql

#spring.datasource.url=jdbc:mysql://192.168.2.107:3306/novels?useUnicode=true&characterEncoding=UTF-8&tinyInt1isBit=false&useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=zdd
#spring.datasource.password=zdd

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#   连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
spring.datasource.hikari.maximum-pool-size=10
#  一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
spring.datasource.hikari.idleTimeout=600000
# 连接只读数据库时配置为true， 保证安全
spring.datasource.hikari.read-only=false
#   等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
spring.datasource.hikari.connection-timeout=30000
#  一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，
#  参考MySQL wait_timeout参数（show variables like '%timeout%';）
spring.datasource.hikari.max-lifetime=1800000

server.tomcat.port-header=HEAD,PUT,DELETE,OPTIONS,TRACE,COPY,SEARCH,PROPFIND

# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# 连接超时时间（毫秒）
spring.redis.timeout=1000ms
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数,默认8（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 池中“最大”空闲连接数。 使用负值表示无限数量的空闲连接。默认8
spring.redis.lettuce.pool.max-idle=8
# 在池耗尽时，在抛出异常之前连接分配应阻塞的最长时间。 使用负值无限期阻止，默认-1ms
spring.redis.lettuce.pool.max-wait=500ms
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=0
# 关闭超时时间
spring.redis.lettuce.shutdown-timeout=100ms